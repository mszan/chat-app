services:
  postgres:
    container_name: postgres
    image: "postgres:13-alpine"
    environment:
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres-files:/var/lib/postgresql/data:nocopy
    ports:
      - 4003:5432
    healthcheck:
      test: "pg_isready -U postgres"
      timeout: 5s
      retries: 3

  redis:
    container_name: redis
    image: "redis:5-alpine"
    ports:
      - 4002:6379
    healthcheck:
      test: "redis-cli ping"
      interval: 1s
      timeout: 3s
      retries: 30

  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile.development
    command: python manage.py runserver 0.0.0.0:8000
    environment:
      DJANGO_SETTINGS_MODULE: src.settings.development
    volumes:
      - backend-files:/app:nocopy
    ports:
      - 4001:8000
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile.development
    volumes:
      - frontend-files:/app:nocopy
      - /app/node_modules
    environment:
      - REACT_APP_BACKEND_WEBSOCKET_URL=ws://localhost:4001/ws/
      - REACT_APP_BACKEND_API_URL=http://localhost:4001/api
    ports:
      - 4000:3000
      - 4005:9229
    depends_on:
      - backend

volumes:
  postgres-files:
    external: true
  backend-files:
    external: true
  frontend-files:
    external: true
