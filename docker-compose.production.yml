version: "3"

services:
  postgres:
    container_name: chat-app_postgres
    restart: always
    image: "postgres:13-alpine"
    environment:
      POSTGRES_PASSWORD: ${SERVICE_POSTGRES_PASSWORD}
    volumes:
      - ${SERVICE_POSTGRES_DATA_LOC}
    ports:
      - ${SERVICE_POSTGRES_PORT}:6379

  redis:
    container_name: chat-app_redis
    restart: always
    image: "redis:5-alpine"
    ports:
      - ${SERVICE_REDIS_PORT}:6379

  backend:
    container_name: chat-app_backend
    restart: always
    build:
      context: ./backend
      dockerfile: Dockerfile.production
      args:
        DJANGO_SETTINGS_MODULE: ${SERVICE_BACKEND_DJANGO_SETTINGS_MODULE}
        DJANGO_SECRET_KEY: ${SERVICE_BACKEND_DJANGO_SECRET_KEY}
        DJANGO_DB_PASSWORD: ${SERVICE_POSTGRES_PASSWORD}
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - ${SERVICE_BACKEND_PORT}:8000
    depends_on:
      - postgres
      - redis

  frontend:
    container_name: chat-app_frontend
    restart: always
    build:
      context: ./frontend
      dockerfile: Dockerfile.production
      args:
        REACT_APP_BACKEND_WEBSOCKET_URL: ${SERVICE_FRONTEND_ARG_REACT_APP_BACKEND_WEBSOCKET_URL}
        REACT_APP_BACKEND_API_URL: ${SERVICE_FRONTEND_ARG_REACT_APP_BACKEND_API_URL}
    command: serve -s build -l 3000
    ports:
      - ${SERVICE_FRONTEND_PORT}:3000
    depends_on:
      - backend