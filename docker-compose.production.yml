services:
  postgres:
    container_name: postgres
    restart: always
    image: "postgres:13-alpine"
    environment:
      - POSTGRES_PASSWORD=postgres
    volumes:
      - /var/docker/chat-app/postgres/data:/var/lib/postgresql/data
    ports:
      - 4003:5432
    healthcheck:
      test: "pg_isready -U postgres"
      timeout: 5s
      retries: 3

  redis:
    container_name: redis
    restart: always
    image: "redis:5-alpine"
    ports:
      - 4002:6379
    healthcheck:
      test: "redis-cli ping"
      interval: 1s
      timeout: 3s
      retries: 30

  backend:
    container_name: backend
    restart: always
    build:
      context: ./backend
      dockerfile: Dockerfile.production
    command: python manage.py runserver 0.0.0.0:8000
    environment:
      DJANGO_SETTINGS_MODULE: src.settings.production
    ports:
      - 4001:8000
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  frontend:
    container_name: frontend
    restart: always
    build:
      context: ./frontend
      dockerfile: Dockerfile.production
    command: serve -s build -l 3000
    environment:
      - REACT_APP_BACKEND_WEBSOCKET_URL=ws://chat-app.mszanowski.pl:8443/ws/
      - REACT_APP_BACKEND_API_URL=https://chat-app.mszanowski.pl:8443/api
    ports:
      - 4000:3000
    depends_on:
      - backend